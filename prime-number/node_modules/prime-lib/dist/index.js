"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generatePrimes = exports.isPrime = exports.nthPrime = exports.primeFactors = exports.countPrimes = exports.nthPrimeApprox = exports.countPrimesApprox = exports.maxSmallGaps = exports.cachePrimes = exports.maxPrime = exports.stopOnValue = exports.stopOnCount = exports.stopWhen = void 0;
const soe_generators_1 = require("./soe-generators");
var utils_1 = require("./utils");
Object.defineProperty(exports, "stopWhen", { enumerable: true, get: function () { return utils_1.stopWhen; } });
Object.defineProperty(exports, "stopOnCount", { enumerable: true, get: function () { return utils_1.stopOnCount; } });
Object.defineProperty(exports, "stopOnValue", { enumerable: true, get: function () { return utils_1.stopOnValue; } });
var common_1 = require("./common");
Object.defineProperty(exports, "maxPrime", { enumerable: true, get: function () { return common_1.maxPrime; } });
var cache_primes_1 = require("./cache-primes");
Object.defineProperty(exports, "cachePrimes", { enumerable: true, get: function () { return cache_primes_1.cachePrimes; } });
Object.defineProperty(exports, "maxSmallGaps", { enumerable: true, get: function () { return cache_primes_1.maxSmallGaps; } });
var count_primes_approx_1 = require("./count-primes-approx");
Object.defineProperty(exports, "countPrimesApprox", { enumerable: true, get: function () { return count_primes_approx_1.countPrimesApprox; } });
var nth_prime_approx_1 = require("./nth-prime-approx");
Object.defineProperty(exports, "nthPrimeApprox", { enumerable: true, get: function () { return nth_prime_approx_1.nthPrimeApprox; } });
var count_primes_1 = require("./count-primes");
Object.defineProperty(exports, "countPrimes", { enumerable: true, get: function () { return count_primes_1.countPrimes; } });
var prime_factors_1 = require("./prime-factors");
Object.defineProperty(exports, "primeFactors", { enumerable: true, get: function () { return prime_factors_1.primeFactors; } });
var nth_prime_1 = require("./nth-prime");
Object.defineProperty(exports, "nthPrime", { enumerable: true, get: function () { return nth_prime_1.nthPrime; } });
var is_prime_1 = require("./is-prime");
Object.defineProperty(exports, "isPrime", { enumerable: true, get: function () { return is_prime_1.isPrime; } });
/**
 * Prime numbers generator, based on Sieve of Eratosthenes algorithm.
 */
function generatePrimes(options) {
    const { boost = 0, start = 0 } = options !== null && options !== void 0 ? options : {};
    if (start > 2) {
        return (0, soe_generators_1.sieveIntStart)(start);
    }
    if (boost >= 1) {
        return (0, soe_generators_1.sieveIntBoost)(boost);
    }
    return (0, soe_generators_1.sieveInt)();
}
exports.generatePrimes = generatePrimes;
